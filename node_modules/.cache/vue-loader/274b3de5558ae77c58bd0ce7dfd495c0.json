{"remainingRequest":"/Users/tomjongbloets/newsfeed-buid/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tomjongbloets/newsfeed-buid/src/components/news/CreateNews.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tomjongbloets/newsfeed-buid/src/components/news/CreateNews.vue","mtime":1588252313776},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkYiBmcm9tICcuLi9maXJlYmFzZUluaXQnCmltcG9ydCBmaXJlYmFzZSwgeyBzdG9yYWdlIH0gZnJvbSAnZmlyZWJhc2UnCgpleHBvcnQgZGVmYXVsdCB7IAoKCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuewogICAgICAgICAgICBuZXdzX2lkOiBudWxsLCBwcm9wczogeyBOdW1iZXIgfSwKICAgICAgICAgICAgYXV0aG9yOiBudWxsLAogICAgICAgICAgICBpbWFnZTogbnVsbCwKICAgICAgICAgICAgaW1hZ2UxOiBudWxsLAogICAgICAgICAgICBpbWFnZTI6IG51bGwsCiAgICAgICAgICAgIHRpdGxlOiBudWxsLAogICAgICAgICAgICB0ZXh0OiBudWxsLAogICAgICAgIH0KICAgIH0sCgogICAgbWV0aG9kcyA6IHsKICAgICAgICBzYXZlTmV3cygpewogICAgICAgICAgICBkYi5jb2xsZWN0aW9uKCduZXdzJykuYWRkKHsKICAgICAgICAgICAgICAgIG5ld3NfaWQ6IHRoaXMubmV3c19pZCwKICAgICAgICAgICAgICAgIGF1dGhvcjogdGhpcy5hdXRob3IsCiAgICAgICAgICAgICAgICBpbWFnZTogdGhpcy5pbWFnZSwKICAgICAgICAgICAgICAgIGltYWdlMTogdGhpcy5pbWFnZTEsCiAgICAgICAgICAgICAgICBpbWFnZTI6IHRoaXMuaW1hZ2UyLAogICAgICAgICAgICAgICAgdGl0bGU6IHRoaXMudGl0bGUsCiAgICAgICAgICAgICAgICB0ZXh0OiB0aGlzLnRleHQsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC50aGVuKHRoaXMuJHJvdXRlci5wdXNoKCcvJykKICAgICAgICAgICAgKQogICAgICAgICAgICB9LAogICAgICAgICAgICB1cGxvYWRJbWFnZShlKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhuZXcgZmlyZWJhc2UuZmlyZXN0b3JlLlRpbWVzdGFtcCgpKSAKCiAgICAgICAgICAgICAgICBsZXQgZmlsZSA9IGUudGFyZ2V0LmZpbGVzWzBdCgogICAgICAgICAgICAgICAgdmFyIHN0b3JhZ2VSZWYgPSBmaXJlYmFzZS5zdG9yYWdlKCkucmVmKCduZXdzLycgKyBmaWxlLm5hbWUpCgogICAgICAgICAgICAgICAgbGV0IHVwbG9hZFRhc2sgPSBzdG9yYWdlUmVmLnB1dChmaWxlKTsKCiAgICAgICAgICAgICAgICBzdG9yYWdlUmVmLnB1dChmaWxlKTsKCiAgICAgICAgICAgICAgICAgICAgdXBsb2FkVGFzay5vbignc3RhdGVfY2hhbmdlZCcsIChzbmFwc2hvdCkgPT57CgogICAgICAgICAgICAgICAgfSwgKGVycm9yKSA9PiB7CiAgICAgICAgICAgICAgICAvLyBIYW5kbGUgdW5zdWNjZXNzZnVsIHVwbG9hZHMKICAgICAgICAgICAgICAgIH0sICgpID0+IHsKICAgICAgICAgICAgICAgIC8vIEhhbmRsZSBzdWNjZXNzZnVsIHVwbG9hZHMgb24gY29tcGxldGUKICAgICAgICAgICAgICAgIC8vIEZvciBpbnN0YW5jZSwgZ2V0IHRoZSBkb3dubG9hZCBVUkw6IGh0dHBzOi8vZmlyZWJhc2VzdG9yYWdlLmdvb2dsZWFwaXMuY29tLy4uLgogICAgICAgICAgICAgICAgdXBsb2FkVGFzay5zbmFwc2hvdC5yZWYuZ2V0RG93bmxvYWRVUkwoKS50aGVuKChkb3dubG9hZFVSTCkgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2UgPSBkb3dubG9hZFVSTDsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnRmlsZSBhdmFpbGFibGUgYXQnLCBkb3dubG9hZFVSTCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHVwbG9hZEltYWdlMShlKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhuZXcgZmlyZWJhc2UuZmlyZXN0b3JlLlRpbWVzdGFtcCgpKSAKCiAgICAgICAgICAgICAgICBsZXQgZmlsZSA9IGUudGFyZ2V0LmZpbGVzWzBdCgogICAgICAgICAgICAgICAgdmFyIHN0b3JhZ2VSZWYgPSBmaXJlYmFzZS5zdG9yYWdlKCkucmVmKCduZXdzLycgKyBmaWxlLm5hbWUpCgogICAgICAgICAgICAgICAgbGV0IHVwbG9hZFRhc2sgPSBzdG9yYWdlUmVmLnB1dChmaWxlKTsKCiAgICAgICAgICAgICAgICBzdG9yYWdlUmVmLnB1dChmaWxlKTsKCiAgICAgICAgICAgICAgICAgICAgdXBsb2FkVGFzay5vbignc3RhdGVfY2hhbmdlZCcsIChzbmFwc2hvdCkgPT57CgogICAgICAgICAgICAgICAgfSwgKGVycm9yKSA9PiB7CiAgICAgICAgICAgICAgICAvLyBIYW5kbGUgdW5zdWNjZXNzZnVsIHVwbG9hZHMKICAgICAgICAgICAgICAgIH0sICgpID0+IHsKICAgICAgICAgICAgICAgIC8vIEhhbmRsZSBzdWNjZXNzZnVsIHVwbG9hZHMgb24gY29tcGxldGUKICAgICAgICAgICAgICAgIC8vIEZvciBpbnN0YW5jZSwgZ2V0IHRoZSBkb3dubG9hZCBVUkw6IGh0dHBzOi8vZmlyZWJhc2VzdG9yYWdlLmdvb2dsZWFwaXMuY29tLy4uLgogICAgICAgICAgICAgICAgdXBsb2FkVGFzay5zbmFwc2hvdC5yZWYuZ2V0RG93bmxvYWRVUkwoKS50aGVuKChkb3dubG9hZFVSTCkgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2UxID0gZG93bmxvYWRVUkw7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0ZpbGUgYXZhaWxhYmxlIGF0JywgZG93bmxvYWRVUkwpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB1cGxvYWRJbWFnZTIoZSkgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2cobmV3IGZpcmViYXNlLmZpcmVzdG9yZS5UaW1lc3RhbXAoKSkgCgogICAgICAgICAgICAgICAgbGV0IGZpbGUgPSBlLnRhcmdldC5maWxlc1swXQoKICAgICAgICAgICAgICAgIHZhciBzdG9yYWdlUmVmID0gZmlyZWJhc2Uuc3RvcmFnZSgpLnJlZignbmV3cy8nICsgZmlsZS5uYW1lKQoKICAgICAgICAgICAgICAgIGxldCB1cGxvYWRUYXNrID0gc3RvcmFnZVJlZi5wdXQoZmlsZSk7CgogICAgICAgICAgICAgICAgc3RvcmFnZVJlZi5wdXQoZmlsZSk7CgogICAgICAgICAgICAgICAgICAgIHVwbG9hZFRhc2sub24oJ3N0YXRlX2NoYW5nZWQnLCAoc25hcHNob3QpID0+ewoKICAgICAgICAgICAgICAgIH0sIChlcnJvcikgPT4gewogICAgICAgICAgICAgICAgLy8gSGFuZGxlIHVuc3VjY2Vzc2Z1bCB1cGxvYWRzCiAgICAgICAgICAgICAgICB9LCAoKSA9PiB7CiAgICAgICAgICAgICAgICAvLyBIYW5kbGUgc3VjY2Vzc2Z1bCB1cGxvYWRzIG9uIGNvbXBsZXRlCiAgICAgICAgICAgICAgICAvLyBGb3IgaW5zdGFuY2UsIGdldCB0aGUgZG93bmxvYWQgVVJMOiBodHRwczovL2ZpcmViYXNlc3RvcmFnZS5nb29nbGVhcGlzLmNvbS8uLi4KICAgICAgICAgICAgICAgIHVwbG9hZFRhc2suc25hcHNob3QucmVmLmdldERvd25sb2FkVVJMKCkudGhlbigoZG93bmxvYWRVUkwpID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmltYWdlMiA9IGRvd25sb2FkVVJMOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdGaWxlIGF2YWlsYWJsZSBhdCcsIGRvd25sb2FkVVJMKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KfSAKCgoKCgoK"},{"version":3,"sources":["CreateNews.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateNews.vue","sourceRoot":"src/components/news","sourcesContent":["<template>\n        <v-row align=\"center\" justify=\"center\" class=\"ma-12\">\n        <form @submit.prevent=\"saveNews\">\n      <v-text-field\n        v-model=\"news_id\"\n        :counter=\"20\"\n        label=\"number\"\n        required\n        type=\"number\"\n      ></v-text-field>\n      <v-text-field\n        v-model=\"author\"\n        :counter=\"20\"\n        label=\"author\"\n        required\n      ></v-text-field>\n            <input type=\"file\" @change=\"uploadImage\" required>\n            <label>News Image1</label>\n\n            <input type=\"file\" @change=\"uploadImage1\">\n            <label>News Image2</label>\n\n            <input type=\"file\" @change=\"uploadImage2\">\n            <label>News Image2</label>\n            \n\n       \n\n        <v-text-field\n        v-model=\"title\"\n        :counter=\"20\"\n        label=\"title\"\n        required\n      ></v-text-field>\n\n      <v-textarea\n          v-model=\"text\"\n          filled\n          name=\"input-7-4\"\n          label=\"Filled textarea\"\n          value=\"Hier komt het verhaal\"\n          required\n        ></v-textarea>\n        <v-btn type=\"submit\" color=\"primary\">Submit</v-btn>\n        <router-link to=\"/news\" class=\"btn grey\">Cancel</router-link>\n            </form>\n        </v-row>\n\n</template> \n\n<script>\nimport db from '../firebaseInit'\nimport firebase, { storage } from 'firebase'\n\nexport default { \n\n\n    data(){\n        return{\n            news_id: null, props: { Number },\n            author: null,\n            image: null,\n            image1: null,\n            image2: null,\n            title: null,\n            text: null,\n        }\n    },\n\n    methods : {\n        saveNews(){\n            db.collection('news').add({\n                news_id: this.news_id,\n                author: this.author,\n                image: this.image,\n                image1: this.image1,\n                image2: this.image2,\n                title: this.title,\n                text: this.text,\n            })\n            .then(this.$router.push('/')\n            )\n            },\n            uploadImage(e) {\n                console.log(new firebase.firestore.Timestamp()) \n\n                let file = e.target.files[0]\n\n                var storageRef = firebase.storage().ref('news/' + file.name)\n\n                let uploadTask = storageRef.put(file);\n\n                storageRef.put(file);\n\n                    uploadTask.on('state_changed', (snapshot) =>{\n\n                }, (error) => {\n                // Handle unsuccessful uploads\n                }, () => {\n                // Handle successful uploads on complete\n                // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n                uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                    this.image = downloadURL;\n                    console.log('File available at', downloadURL);\n                });\n                });\n                },\n                uploadImage1(e) {\n                console.log(new firebase.firestore.Timestamp()) \n\n                let file = e.target.files[0]\n\n                var storageRef = firebase.storage().ref('news/' + file.name)\n\n                let uploadTask = storageRef.put(file);\n\n                storageRef.put(file);\n\n                    uploadTask.on('state_changed', (snapshot) =>{\n\n                }, (error) => {\n                // Handle unsuccessful uploads\n                }, () => {\n                // Handle successful uploads on complete\n                // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n                uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                    this.image1 = downloadURL;\n                    console.log('File available at', downloadURL);\n                });\n                });\n                },\n                uploadImage2(e) {\n                console.log(new firebase.firestore.Timestamp()) \n\n                let file = e.target.files[0]\n\n                var storageRef = firebase.storage().ref('news/' + file.name)\n\n                let uploadTask = storageRef.put(file);\n\n                storageRef.put(file);\n\n                    uploadTask.on('state_changed', (snapshot) =>{\n\n                }, (error) => {\n                // Handle unsuccessful uploads\n                }, () => {\n                // Handle successful uploads on complete\n                // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n                uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                    this.image2 = downloadURL;\n                    console.log('File available at', downloadURL);\n                });\n                });\n                }\n            }\n} \n\n\n\n\n\n\n</script>"]}]}