{"remainingRequest":"/Users/tomjongbloets/newsapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tomjongbloets/newsapp/src/components/NewsFeed.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tomjongbloets/newsapp/src/components/NewsFeed.vue","mtime":1587220379916},{"path":"/Users/tomjongbloets/newsapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomjongbloets/newsapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tomjongbloets/newsapp/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/tomjongbloets/newsapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomjongbloets/newsapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkYiBmcm9tICcuL2ZpcmViYXNlSW5pdCcKZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YSgpewogICAgICAgIHJldHVybnsKICAgICAgICAgICAgbmV3czogW10KICAgICAgICB9CiAgICB9LAoKICAgIGNyZWF0ZWQoKXsKICAgICAgICBkYi5jb2xsZWN0aW9uKCduZXdzJykub3JkZXJCeSgnbmV3c19pZCcsICdkZXNjJykuZ2V0KCkudGhlbihxdWVyeVNuYXBzaG90ID0+IHsKICAgICAgICAgICAgcXVlcnlTbmFwc2hvdC5mb3JFYWNoKGRvYyA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gewogICAgICAgICAgICAgICAgJ25ld3NfaWQnIDogZG9jLmRhdGEoKS5uZXdzX2lkLCAgICAKICAgICAgICAgICAgICAgICdhdXRob3InIDogZG9jLmRhdGEoKS5hdXRob3IsCiAgICAgICAgICAgICAgICAndGl0bGUnIDogZG9jLmRhdGEoKS50aXRsZSwKICAgICAgICAgICAgICAgICd0ZXh0JyA6IGRvYy5kYXRhKCkudGV4dCwKICAgICAgICAgICAgICAgICdpbWFnZScgOiBkb2MuZGF0YSgpLmltYWdlLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5uZXdzLnB1c2goZGF0YSkKICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgKQogICAgfQp9Cg=="},{"version":3,"sources":["NewsFeed.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"NewsFeed.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div news_id=\"new-feed\">\n        <h3>feed News</h3>\n        <ul class=\"collection with-header\">\n            <li v-for=\"newsitems in news\" v-bind:key=\"newsitems.news_id\">\n                <h1>{{newsitems.title}}</h1><br>\n                {{newsitems.text}}\n                \n                <img v-bind:src= newsitems.image >\n            </li>\n        </ul>\n    </div>\n</template>\n\n<script>\nimport db from './firebaseInit'\nexport default {\n    data(){\n        return{\n            news: []\n        }\n    },\n\n    created(){\n        db.collection('news').orderBy('news_id', 'desc').get().then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n                const data = {\n                'news_id' : doc.data().news_id,    \n                'author' : doc.data().author,\n                'title' : doc.data().title,\n                'text' : doc.data().text,\n                'image' : doc.data().image,\n                }\n                this.news.push(data)\n            })\n        }\n        \n        )\n    }\n}\n</script>"]}]}