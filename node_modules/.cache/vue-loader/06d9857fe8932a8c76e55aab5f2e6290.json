{"remainingRequest":"/Users/tomjongbloets/newsfeed-buid/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/tomjongbloets/newsfeed-buid/node_modules/vuetify-loader/lib/loader.js??ref--17-0!/Users/tomjongbloets/newsfeed-buid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tomjongbloets/newsfeed-buid/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tomjongbloets/newsfeed-buid/src/components/NewsFeed.vue?vue&type=template&id=55ab72c1&","dependencies":[{"path":"/Users/tomjongbloets/newsfeed-buid/src/components/NewsFeed.vue","mtime":1587388509607},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IGF0dHJzOiB7IGlkOiAibmV3LWZlZWQiIH0gfSwKICAgIFsKICAgICAgX2MoCiAgICAgICAgInYtcm93IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAibm8tcGFkZGluZyIgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtY29sIiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm5vLXBhZGRpbmciIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgdG86IHsKICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJ2aWV3LW5ld3MiLAogICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7IG5ld3NfaWQ6IF92bS5uZXdzWzBdLm5ld3NfaWQgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtaW1nIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICAgICAgICAgIndoaXRlLS10ZXh0IGFsaWduLWVuZCBib3JkZXItcmFkaXVzLWJvdHRvbSAiLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiBfdm0ubmV3c1swXS5pbWFnZSwKICAgICAgICAgICAgICAgICAgICAgICAgZ3JhZGllbnQ6ICJ0byBib3R0b20sIHJnYmEoMCwwLDAsLjEpLCByZ2JhKDAsMCwwLC41KSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjYwdmgiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygidi1jYXJkLXRpdGxlIiwgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImZvbnQtd2VpZ2h0LWJvbGQiLAogICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB0ZXh0Q29udGVudDogX3ZtLl9zKF92bS5uZXdzWzBdLnRpdGxlKSB9CiAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfdm0uX2woX3ZtLm5ld3MsIGZ1bmN0aW9uKG5ld3NpdGVtcykgewogICAgICAgIHJldHVybiBfYygKICAgICAgICAgICJ2LXJvdyIsCiAgICAgICAgICB7IGtleTogbmV3c2l0ZW1zLm5ld3NfaWQsIHN0YXRpY0NsYXNzOiAibmV3cy1mZWVkLWxpc3QgbWEtMiIgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInYtY29sIiwKICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAicGEtMCIsIGF0dHJzOiB7IGNvbHM6ICI1IiwgbWQ6ICI0IiB9IH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgdG86IHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogInZpZXctbmV3cyIsCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczogeyBuZXdzX2lkOiBuZXdzaXRlbXMubmV3c19pZCB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoInYtaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ3aGl0ZS0tdGV4dCBhbGlnbi1lbmQgYm9yZGVyLXJhZGl1cyIsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IG5ld3NpdGVtcy5pbWFnZSwgaGVpZ2h0OiAiMTQwcHgiIH0KICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInBhLTAiLCBhdHRyczogeyBjb2xzOiAiNyIsIG1kOiAiNiIgfSB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHRvOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJ2aWV3LW5ld3MiLAogICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHsgbmV3c19pZDogbmV3c2l0ZW1zLm5ld3NfaWQgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJ2LWNhcmQtdGl0bGUiLCB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNhcHRpb24gZm9udC13ZWlnaHQtbWVkaXVtIiwKICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHRleHRDb250ZW50OiBfdm0uX3MobmV3c2l0ZW1zLnRpdGxlKSB9CiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAidi1jYXJkLXRleHQiLAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygidi1jaGlwIiwgeyBzdGF0aWNDbGFzczogIm92ZXJsaW5lIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhuZXdzaXRlbXMuYXV0aG9yKSkKICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICkKICAgICAgICAgIF0sCiAgICAgICAgICAxCiAgICAgICAgKQogICAgICB9KQogICAgXSwKICAgIDIKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}