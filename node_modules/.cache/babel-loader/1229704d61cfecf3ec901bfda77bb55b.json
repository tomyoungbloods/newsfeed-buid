{"remainingRequest":"/Users/tomjongbloets/newsfeed-buid/node_modules/thread-loader/dist/cjs.js!/Users/tomjongbloets/newsfeed-buid/node_modules/babel-loader/lib/index.js!/Users/tomjongbloets/newsfeed-buid/src/router/index.js","dependencies":[{"path":"/Users/tomjongbloets/newsfeed-buid/src/router/index.js","mtime":1587388509611},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomjongbloets/newsfeed-buid/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgUm91dGVyIGZyb20gJ3Z1ZS1yb3V0ZXInOwppbXBvcnQgTmV3c0ZlZWQgZnJvbSAnQC9jb21wb25lbnRzL05ld3NGZWVkJzsKaW1wb3J0IENyZWF0ZU5ld3MgZnJvbSAnQC9jb21wb25lbnRzL25ld3MvQ3JlYXRlTmV3cyc7CmltcG9ydCBOZXdzRGFzaGJvYXJkIGZyb20gJ0AvY29tcG9uZW50cy9uZXdzL05ld3NEYXNoYm9hcmQnOwppbXBvcnQgVmlld05ld3MgZnJvbSAnQC9jb21wb25lbnRzL25ld3MvVmlld05ld3MnOwppbXBvcnQgRWRpdE5ld3MgZnJvbSAnQC9jb21wb25lbnRzL25ld3MvRWRpdE5ld3MnOyAvLyBpbXBvcnQgTG9naW4gZnJvbSAnQC9jb21wb25lbnRzL0xvZ2luJwovLyBpbXBvcnQgUmVnaXN0ZXIgZnJvbSAnQC9jb21wb25lbnRzL1JlZ2lzdGVyJwoKaW1wb3J0IGZpcmViYXNlLCB7IGZ1bmN0aW9ucyB9IGZyb20gJ2ZpcmViYXNlJzsKVnVlLnVzZShSb3V0ZXIpOwp2YXIgcm91dGVyID0gbmV3IFJvdXRlcih7CiAgcm91dGVzOiBbewogICAgcGF0aDogJy8nLAogICAgbmFtZTogJ25ld3MtZmVlZCcsCiAgICBjb21wb25lbnQ6IE5ld3NGZWVkLAogICAgbWV0YTogewogICAgICByZXF1aXJlc0d1ZXN0OiB0cnVlCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9uZXdzJywKICAgIG5hbWU6ICduZXdzLWRhc2hib2FyZCcsCiAgICBjb21wb25lbnQ6IE5ld3NEYXNoYm9hcmQsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVzQXV0aDogdHJ1ZQogICAgfQogIH0sIHsKICAgIHBhdGg6ICcvbmV3LW5ld3MnLAogICAgbmFtZTogJ25ldy1uZXdzJywKICAgIGNvbXBvbmVudDogQ3JlYXRlTmV3cywKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZXNBdXRoOiB0cnVlCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9uZXdzLzpuZXdzX2lkJywKICAgIG5hbWU6ICd2aWV3LW5ld3MnLAogICAgY29tcG9uZW50OiBWaWV3TmV3cywKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZXNBdXRoOiB0cnVlCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9uZXdzL2VkaXQvOm5ld3NfaWQnLAogICAgbmFtZTogJ2VkaXQtbmV3cycsCiAgICBjb21wb25lbnQ6IEVkaXROZXdzLAogICAgbWV0YTogewogICAgICByZXF1aXJlc0F1dGg6IHRydWUKICAgIH0KICB9IC8vIHsKICAvLyAgIHBhdGg6ICcvbG9naW4nLAogIC8vICAgbmFtZTogJ2xvZ2luJywKICAvLyAgIGNvbXBvbmVudDogTG9naW4sCiAgLy8gICBtZXRhOiB7CiAgLy8gICAgIHJlcXVpcmVzR3Vlc3Q6IHRydWUKICAvLyAgIH0KICAvLyB9LAogIC8vIHsKICAvLyAgIHBhdGg6ICcvcmVnaXN0ZXInLAogIC8vICAgbmFtZTogJ3JlZ2lzdGVyJywKICAvLyAgIGNvbXBvbmVudDogUmVnaXN0ZXIsCiAgLy8gICBtZXRhOiB7CiAgLy8gICAgIHJlcXVpcmVzQXV0aDogdHJ1ZQogIC8vICAgfQogIC8vIH0sCiAgXQp9KTsgLy8gLy8gTkFWIEd1YXJkcwovLyByb3V0ZXIuYmVmb3JlRWFjaCgodG8sIGZyb20sIG5leHQpID0+IHsKLy8gICAgIC8vIENoZWNrIGZvciByZXF1aXJlZEF1dGggZ3VhcmQKLy8gICAgIGlmKHRvLm1hdGNoZWQuc29tZShyZWNvcmQgPT4gcmVjb3JkLm1ldGEucmVxdWlyZXNBdXRoKSkgewovLyAgICAgICAvLyBDaGVjayBpZiBOT1QgbG9nZ2VkIGluCi8vICAgICAgIGlmKCFmaXJlYmFzZS5hdXRoKCkuY3VycmVudFVzZXIpewovLyAgICAgICAgIC8vIEdvIHRvIGxvZ2luCi8vICAgICAgICAgbmV4dCh7Ci8vICAgICAgICAgICBwYXRoOiAnL2xvZ2luJywKLy8gICAgICAgICAgIHF1ZXJ5OiB7Ci8vICAgICAgICAgICAgIHJlZGlyZWN0OiB0by5mdWxsUGF0aAovLyAgICAgICAgICAgfQovLyAgICAgICAgIH0pOwovLyAgICAgICB9IGVsc2UgewovLyAgICAgICAgIC8vIFByb2NlZWQgdG8gcm91dGUKLy8gICAgICAgICBuZXh0KCk7Ci8vICAgICAgIH0KLy8gICAgIH1lbHNlIGlmKHRvLm1hdGNoZWQuc29tZShyZWNvcmQgPT4gcmVjb3JkLm1ldGEucmVxdWlyZXNHdWVzdCkpewovLyAgICAgICBpZihmaXJlYmFzZS5hdXRoKCkuY3VycmVudFVzZXIpewovLyAgICAgICAgIC8vIEdvIHRvIGxvZ2luCi8vICAgICAgICAgbmV4dCh7Ci8vICAgICAgICAgICBwYXRoOiAnL2Rhc2hib2FyZCcsCi8vICAgICAgICAgICBxdWVyeTogewovLyAgICAgICAgICAgICByZWRpcmVjdDogdG8uZnVsbFBhdGgKLy8gICAgICAgICAgIH0KLy8gICAgICAgICB9KTsKLy8gICAgICAgfSBlbHNlIHsKLy8gICAgICAgICAvLyBQcm9jZWVkIHRvIHJvdXRlCi8vICAgICAgICAgbmV4dCgpOwovLyAgICAgfQovLyAgICB9IGVsc2UgewovLyAgICAgICAvLyBQcm9jZWVkIHRvIHJvdXRlCi8vICAgICAgIG5leHQoKTsKLy8gICAgIH0KLy8gfSk7CgpleHBvcnQgZGVmYXVsdCByb3V0ZXI7IC8vIGV4cG9ydHMudXBsb2FkZEZpbGUgPSBmdW5jdGlvbnMuaHR0cHMub25SZXF1ZXN0KChyZXEsIHJlcykgPT4gewovLyAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oewovLyAgICAgICBtZXNzYWdlOiAnaXQgd29ya2VkIScKLy8gICAgIH0pCi8vIH0p"},{"version":3,"sources":["/Users/tomjongbloets/newsfeed-buid/src/router/index.js"],"names":["Vue","Router","NewsFeed","CreateNews","NewsDashboard","ViewNews","EditNews","firebase","functions","use","router","routes","path","name","component","meta","requiresGuest","requiresAuth"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CACA;AACA;;AACA,OAAOC,QAAP,IAAmBC,SAAnB,QAAoC,UAApC;AAGAR,GAAG,CAACS,GAAJ,CAAQR,MAAR;AAEA,IAAIS,MAAM,GAAG,IAAIT,MAAJ,CAAW;AACtBU,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,SAAS,EAAEZ,QAHb;AAIEa,IAAAA,IAAI,EAAE;AACJC,MAAAA,aAAa,EAAE;AADX;AAJR,GADM,EASN;AACEJ,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,gBAFR;AAGEC,IAAAA,SAAS,EAAEV,aAHb;AAIEW,IAAAA,IAAI,EAAE;AACJE,MAAAA,YAAY,EAAE;AADV;AAJR,GATM,EAkBN;AACEL,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,SAAS,EAAEX,UAHb;AAIEY,IAAAA,IAAI,EAAE;AACJE,MAAAA,YAAY,EAAE;AADV;AAJR,GAlBM,EA2BN;AACEL,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,SAAS,EAAET,QAHb;AAIEU,IAAAA,IAAI,EAAE;AACJE,MAAAA,YAAY,EAAE;AADV;AAJR,GA3BM,EAmCN;AACEL,IAAAA,IAAI,EAAE,qBADR;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,SAAS,EAAER,QAHb;AAIES,IAAAA,IAAI,EAAE;AACJE,MAAAA,YAAY,EAAE;AADV;AAJR,GAnCM,CA2CN;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DM;AADc,CAAX,CAAb,C,CAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeP,MAAf,C,CAEA;AAEA;AACA;AACA;AAEA","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport NewsFeed from '@/components/NewsFeed'\nimport CreateNews from '@/components/news/CreateNews'\nimport NewsDashboard from '@/components/news/NewsDashboard'\nimport ViewNews from '@/components/news/ViewNews'\nimport EditNews from '@/components/news/EditNews'\n// import Login from '@/components/Login'\n// import Register from '@/components/Register'\nimport firebase, { functions } from 'firebase'\n\n\nVue.use(Router)\n\nlet router = new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'news-feed',\n      component: NewsFeed,\n      meta: {\n        requiresGuest: true\n      }\n    },\n    {\n      path: '/news',\n      name: 'news-dashboard',\n      component: NewsDashboard,\n      meta: {\n        requiresAuth: true\n\n      }\n    },\n    {\n      path: '/new-news',\n      name: 'new-news',\n      component: CreateNews,\n      meta: {\n        requiresAuth: true\n\n      }\n    },\n    {\n      path: '/news/:news_id',\n      name: 'view-news',\n      component: ViewNews,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: '/news/edit/:news_id',\n      name: 'edit-news',\n      component: EditNews,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    // {\n    //   path: '/login',\n    //   name: 'login',\n    //   component: Login,\n    //   meta: {\n    //     requiresGuest: true\n\n    //   }\n    // },\n    // {\n    //   path: '/register',\n    //   name: 'register',\n    //   component: Register,\n    //   meta: {\n    //     requiresAuth: true\n    //   }\n    // },\n  ]\n})\n\n// // NAV Guards\n// router.beforeEach((to, from, next) => {\n//     // Check for requiredAuth guard\n//     if(to.matched.some(record => record.meta.requiresAuth)) {\n//       // Check if NOT logged in\n//       if(!firebase.auth().currentUser){\n//         // Go to login\n//         next({\n//           path: '/login',\n//           query: {\n//             redirect: to.fullPath\n//           }\n//         });\n//       } else {\n//         // Proceed to route\n//         next();\n//       }\n//     }else if(to.matched.some(record => record.meta.requiresGuest)){\n//       if(firebase.auth().currentUser){\n//         // Go to login\n//         next({\n//           path: '/dashboard',\n//           query: {\n//             redirect: to.fullPath\n//           }\n//         });\n//       } else {\n//         // Proceed to route\n//         next();\n//     }\n//    } else {\n//       // Proceed to route\n//       next();\n//     }\n// });\n\nexport default router;\n\n// exports.uploaddFile = functions.https.onRequest((req, res) => {\n\n//     res.status(200).json({\n//       message: 'it worked!'\n//     })\n\n// })"]}]}